
# Stage de build
FROM node:22-alpine AS builder
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .

ARG NODE_ENV
ARG NEXT_PUBLIC_DOMAIN
ARG NEXT_PUBLIC_API_URL
ARG IMAGE_PROTOCOL
ARG IMAGE_HOSTNAME

RUN echo "NODE_ENV=\"${NODE_ENV}\"" > .env && \
    echo "NEXT_PUBLIC_DOMAIN=\"${NEXT_PUBLIC_DOMAIN}\"" >> .env && \
    echo "NEXT_PUBLIC_API_URL=\"${NEXT_PUBLIC_API_URL}\"" >> .env && \
    echo "NEXT_PUBLIC_IMAGE_PROTOCOL=\"${IMAGE_PROTOCOL}\"" >> .env && \
    echo "NEXT_PUBLIC_IMAGE_HOSTNAME=\"${IMAGE_HOSTNAME}\"" >> .env

RUN npm run build

# Stage de produção
FROM node:22-alpine AS runner
WORKDIR /app

COPY --from=builder /app/package*.json ./
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/next.config.ts ./
COPY --from=builder /app/.env ./


RUN npm install --frozen-lockfile --omit=dev
EXPOSE 3000
CMD ["npm", "start"]
